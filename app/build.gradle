apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "es.jarroyo.daggerandkotlin"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        def STRING = "String"
        def INT = "int"
        def API_URL = "API_URL"
        def MIN_NAME_LENGTH = "MIN_NAME_LENGTH"
        def MIN_SURNAME_LENGTH = "MIN_SURNAME_LENGTH"
        def PHONE_LENGTH = "PHONE_LENGTH"
        def MARVEL_API_URL = "MARVEL_API_URL"
        def MARVEL_API_PUBLIC_KEY = "MARVEL_API_PUBLIC_KEY"
        def MARVEL_API_PRIVATE_KEY = "MARVEL_API_PRIVATE_KEY"



        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        all {
            buildConfigField INT, MIN_NAME_LENGTH, "2"
            buildConfigField INT, MIN_SURNAME_LENGTH, "2"
            buildConfigField INT, PHONE_LENGTH, "9"
            buildConfigField STRING, API_URL, "\"http://apiurlexample.com\""
            buildConfigField STRING, MARVEL_API_URL, "\"http://gateway.marvel.com/\""
            buildConfigField STRING, MARVEL_API_PUBLIC_KEY, "\"85097bc62f14ff53975d4d92519b111a\""
            buildConfigField STRING, MARVEL_API_PRIVATE_KEY, "\"2bfc2b424d5b50086ae2242409ec86d8be0a4e3a\""

        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.google.firebase:firebase-auth:' + rootProject.ext.playServicesVersion
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    implementation 'com.android.support:multidex:1.0.0'

    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // TESTS
    implementation "org.mockito:mockito-core:2.8.9"
    // For local unit tests on your development machine
    testImplementation "org.mockito:mockito-core:2.8.9"
    // For instrumentation tests on Android devices and emulators
    androidTestImplementation "org.mockito:mockito-android:2.8.9"
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.0.1'

    implementation 'com.android.support:appcompat-v7:' + rootProject.ext.supportLibVersion
    implementation 'com.android.support:support-v4:' + rootProject.ext.supportLibVersion
    implementation 'com.android.support:design:' + rootProject.ext.supportLibVersion
    implementation 'com.android.support:cardview-v7:' + rootProject.ext.supportLibVersion
    implementation 'com.google.android.gms:play-services-auth:' + rootProject.ext.playServicesVersion
    implementation 'com.pnikosis:materialish-progress:1.7'

    // DAGGER
    implementation 'com.google.dagger:dagger:' + rootProject.ext.daggerVersion
    kapt 'com.google.dagger:dagger-compiler:' + rootProject.ext.daggerVersion

    // BUTTERKNIFE
    implementation 'com.jakewharton:butterknife:' + rootProject.ext.butterknifeVersion
    kapt 'com.jakewharton:butterknife-compiler:' + rootProject.ext.butterknifeVersion

    // RETROFIT
    implementation 'com.squareup.retrofit2:retrofit:' + rootProject.ext.retrofitVersion
    implementation 'com.squareup.retrofit2:converter-gson:' + rootProject.ext.retrofitVersion

    // PICASSO
    implementation 'com.squareup.picasso:picasso:' + rootProject.ext.picassoVersion

    // FIREBASE
    implementation 'com.google.firebase:firebase-auth:' + rootProject.ext.playServicesVersion
    kapt 'com.google.firebase:firebase-auth:' + rootProject.ext.playServicesVersion
    implementation 'com.google.firebase:firebase-core:' + rootProject.ext.playServicesVersion
    implementation 'com.google.firebase:firebase-database:' + rootProject.ext.playServicesVersion
    kapt 'com.google.firebase:firebase-database:' + rootProject.ext.playServicesVersion
    implementation 'com.google.firebase:firebase-messaging:'+ rootProject.ext.playServicesVersion

    // ROOM PERSISTENCE
    implementation 'android.arch.persistence.room:runtime:' + rootProject.ext.roomVersion
    annotationProcessor 'android.arch.persistence.room:compiler:' + rootProject.ext.roomVersion
    kapt "android.arch.persistence.room:compiler:" + rootProject.ext.roomVersion


    //VISION
    implementation 'com.google.android.gms:play-services-vision:'+ rootProject.ext.playServicesVersion
}

kapt {
    generateStubs = true
}



apply plugin: 'com.google.gms.google-services'